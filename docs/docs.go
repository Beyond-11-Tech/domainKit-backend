// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/domain/a": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "get domain A records for given domain",
                "parameters": [
                    {
                        "minLength": 4,
                        "type": "string",
                        "description": "valid (sub)domain to query",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.DomainResult"
                            }
                        }
                    }
                }
            }
        },
        "/domain/aaaa": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "get domain AAAA (IPv6) records for given domain",
                "parameters": [
                    {
                        "minLength": 4,
                        "type": "string",
                        "description": "valid (sub)domain to query",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.DomainResult"
                            }
                        }
                    }
                }
            }
        },
        "/domain/ns": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "get NS records for given domain",
                "parameters": [
                    {
                        "minLength": 4,
                        "type": "string",
                        "description": "valid (sub)domain to query",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.DomainResult"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "structs.DomainResult": {
            "type": "object",
            "properties": {
                "record": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "21.11.25.4",
                        "1.54.23.6"
                    ]
                },
                "registrar": {
                    "type": "string",
                    "example": "1.1.1.1"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and your token. Example: \"Bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
